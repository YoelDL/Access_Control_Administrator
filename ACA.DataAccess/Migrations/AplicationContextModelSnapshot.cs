// <auto-generated />
using System;
using ACA.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ACA.DataAccess.Migrations
{
    [DbContext(typeof(AplicationContext))]
    partial class AplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.12");

            modelBuilder.Entity("ACA.Domain.Entities.Processes.Process", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Processes", (string)null);
                });

            modelBuilder.Entity("ACA.Domain.Entities.Workers.Operator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AsignedSupervisorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CI")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Operator_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("schoolLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AsignedSupervisorId");

                    b.ToTable("Operators", (string)null);
                });

            modelBuilder.Entity("ACA.Domain.Entities.Workers.Supervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CI")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Supervisor_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("schoolLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Supervisors", (string)null);
                });

            modelBuilder.Entity("ACA.Domain.Relations.Process_Operator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OperatorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.HasIndex("ProcessId");

                    b.ToTable("Processes_Operators");
                });

            modelBuilder.Entity("ACA.Domain.Relations.Process_Supervisor", b =>
                {
                    b.Property<Guid>("ProcessId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SupervisorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("ProcessId", "SupervisorId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Process_Supervisor", (string)null);
                });

            modelBuilder.Entity("ACA.Domain.Entities.Workers.Operator", b =>
                {
                    b.HasOne("ACA.Domain.Entities.Workers.Supervisor", "Asigned_Supervisor")
                        .WithMany("Operators")
                        .HasForeignKey("AsignedSupervisorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Asigned_Supervisor");
                });

            modelBuilder.Entity("ACA.Domain.Relations.Process_Operator", b =>
                {
                    b.HasOne("ACA.Domain.Entities.Workers.Operator", "Operador")
                        .WithMany("Processes_Operators")
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ACA.Domain.Entities.Processes.Process", "Process")
                        .WithMany("Processes_Operators")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operador");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("ACA.Domain.Relations.Process_Supervisor", b =>
                {
                    b.HasOne("ACA.Domain.Entities.Processes.Process", "Process")
                        .WithMany("Processes_Supervisors")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ACA.Domain.Entities.Workers.Supervisor", "Supervisor")
                        .WithMany("Processes_Supervisors")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Process");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("ACA.Domain.Entities.Processes.Process", b =>
                {
                    b.Navigation("Processes_Operators");

                    b.Navigation("Processes_Supervisors");
                });

            modelBuilder.Entity("ACA.Domain.Entities.Workers.Operator", b =>
                {
                    b.Navigation("Processes_Operators");
                });

            modelBuilder.Entity("ACA.Domain.Entities.Workers.Supervisor", b =>
                {
                    b.Navigation("Operators");

                    b.Navigation("Processes_Supervisors");
                });
#pragma warning restore 612, 618
        }
    }
}
